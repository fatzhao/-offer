/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
        int nLength1 = GetListLength(pHead1);
        int nLength2 = GetListLength(pHead2);
        int nLengthDif = nLength1 - nLength2;
        ListNode pLong = pHead1;
        ListNode pShort = pHead2;
        if(nLength1 < nLength2){
            pLong = pHead2;
            pShort = pHead1;
            nLengthDif = nLength2 - nLength1;
        }
        
        for(int i=0; i<nLengthDif; i++)
            pLong = pLong.next;
        while(pLong!=null && pShort!=null && pLong!=pShort){
            pLong = pLong.next;
            pShort = pShort.next;
        }
        return pLong;
    }
    
    private int GetListLength(ListNode phead){
        int nLength=0;
        ListNode pNode = phead;
        while(pNode!=null){
            nLength++;
            pNode = pNode.next;
        }
        return nLength;
    }
}
